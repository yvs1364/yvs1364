{"ast":null,"code":"var _jsxFileName = \"/home/yvs/code/yvs1364/react/recette-(copy)-for-build/src/components/Header.js\";\nimport React from 'react';\nimport { ColorContext } from \"./Color\";\n\nvar Header = function Header(_ref) {\n  var pseudo = _ref.pseudo;\n\n  var formatPseudo = function formatPseudo(pseudo) {\n    return /[aeiouy]/i.test(pseudo[0]) ? \"d'\\n    \".concat(pseudo) : \"de \".concat(pseudo);\n  };\n\n  return React.createElement(ColorContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, function (context) {\n    return React.createElement(\"header\", {\n      style: {\n        backgroundColor: context.state.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"La bo\\xEEte \\xE0 recettes \", formatPseudo(pseudo)));\n  });\n};\n\nexport default Header;","map":{"version":3,"sources":["/home/yvs/code/yvs1364/react/recette-(copy)-for-build/src/components/Header.js"],"names":["React","ColorContext","Header","pseudo","formatPseudo","test","context","backgroundColor","state","color"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAAQC,YAAR,QAA2B,SAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAe;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAC5B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAD,MAAM;AAAA,WAAI,YAAYE,IAAZ,CAAiBF,MAAM,CAAC,CAAD,CAAvB,sBAC3BA,MAD2B,iBACVA,MADU,CAAJ;AAAA,GAA3B;;AAGE,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,UAAAG,OAAO;AAAA,WACP;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAED,OAAO,CAACE,KAAR,CAAcC;AAAhC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAyBL,YAAY,CAACD,MAAD,CAArC,CADA,CADO;AAAA,GADX,CADF;AASH,CAbD;;AAeA,eAAeD,MAAf","sourcesContent":["import React  from 'react';\nimport {ColorContext} from \"./Color\"\n\nconst Header = ({pseudo}) =>  {\n  const formatPseudo = pseudo => /[aeiouy]/i.test(pseudo[0])  ? `d'\n    ${pseudo}` : `de ${pseudo}`\n\n    return (\n      <ColorContext.Consumer>\n        { context => (\n          <header style={{backgroundColor: context.state.color}}>\n          <h1>La boîte à recettes {formatPseudo(pseudo)}</h1>\n          </header>\n        )}\n      </ColorContext.Consumer>\n    );\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}